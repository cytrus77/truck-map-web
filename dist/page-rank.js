//
//  Generated by https://www.npmjs.com/package/amd-bundle
//
(function (factory) {

    if ((typeof define === 'function')  &&  define.amd)
        define('PageRank', ["web-cell"], factory);
    else if (typeof module === 'object')
        return  module.exports = factory(require('web-cell'));
    else
        return  this['PageRank'] = factory(this['web-cell']);

})(function (web_cell) {

function merge(base, path) {
  return (base + '/' + path).replace(/\/\//g, '/').replace(/[^/.]+\/\.\.\//g, '').replace(/\.\//g, function (match, index, input) {
    return input[index - 1] === '.' ? match : '';
  });
}

function outPackage(name) {
  return /^[^./]/.test(name);
}

    var require = _require_.bind(null, './');

    function _require_(base, path) {

        var module = _module_[
                outPackage( path )  ?  path  :  ('./' + merge(base, path))
            ],
            exports;

        if (! module.exports) {

            module.exports = { };

            var dependency = module.dependency;

            for (var i = 0;  dependency[i];  i++)
                module.dependency[i] = require( dependency[i] );

            exports = module.factory.apply(
                null,  module.dependency.concat(
                    _require_.bind(null, module.base),  module.exports,  module
                )
            );

            if (exports != null)  module.exports = exports;

            delete module.dependency;  delete module.factory;
        }

        return module.exports;
    }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var _module_ = {
  './index.html': {
    base: '.',
    dependency: [],
    factory: function factory(require, exports, module) {
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;
      var _default = "<template>\n    <style>table {\n  position: relative;border: 1px solid rgba(0, 0, 0, 0.12);border-collapse: collapse;white-space: nowrap;font-size: 13px;background-color: #ffffff;\n}\ntable > thead {\n  padding-bottom: 3px;\n}\ntbody > tr {\n  position: relative;height: 48px;transition-duration: 0.28s;transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);transition-property: background-color;\n}\nthead th,\ntable td {\n  padding: 0 18px 12px 18px;text-align: right;\n}\ntable td {\n  position: relative;vertical-align: middle;height: 48px;border-top: 1px solid rgba(0, 0, 0, 0.12);border-bottom: 1px solid rgba(0, 0, 0, 0.12);padding-top: 12px;box-sizing: border-box;\n}\nthead th {\n  position: relative;vertical-align: bottom;text-overflow: ellipsis;font-size: 14px;font-weight: bold;line-height: 24px;letter-spacing: 0;height: 48px;font-size: 12px;color: rgba(0, 0, 0, 0.54);padding-bottom: 8px;box-sizing: border-box;\n}\ntable {\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\nmain {\n  padding: 0.75rem;\n  text-align: center;\n}\ntable {\n  counter-reset: index;\n  width: 100%;\n}\ntable td:first-child {\n  counter-increment: index;\n}\ntable td:first-child::before {\n  content: counter(index);\n}\ntable th,\ntable td {\n  text-align: center !important;\n}\n</style>\n\n    <main>\n        <img src=\"source/image/delivery.png\">\n        <h2>Driver LeaderBoard</h2>\n        <table>\n            <thead><tr>\n                <th>#</th>\n                <th>Driver</th>\n                <th>Score</th>\n            </tr></thead>\n            <tbody data-array=\"rank\"><tr>\n                <td></td>\n                <td>${view.name}</td>\n                <td>${view.score}</td>\n            </tr></tbody>\n        </table>\n    </main>\n</template>\n";
      exports.default = _default;
    }
  },
  './index': {
    base: '.',
    dependency: [],
    factory: function factory(require, exports, module) {
      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = void 0;

      var _webCell = require('web-cell');

      var _index = _interopRequireDefault(require('./index.html'));

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
          default: obj
        };
      }

      var PageRank =
      /*#__PURE__*/
      function (_HTMLElement) {
        _inherits(PageRank, _HTMLElement);

        function PageRank() {
          var _this;

          _classCallCheck(this, PageRank);

          (_this = _possibleConstructorReturn(this, _getPrototypeOf(PageRank).call(this))).buildDOM(_index.default);

          return _this;
        }

        _createClass(PageRank, [{
          key: "connectedCallback",
          value: function () {
            var _connectedCallback = _asyncToGenerator(
            /*#__PURE__*/
            regeneratorRuntime.mark(function _callee() {
              return regeneratorRuntime.wrap(function _callee$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      this.$('tbody')[0].innerHTML = [{
                        name: 'test',
                        score: 10
                      }, {
                        name: 'example',
                        score: 9
                      }].map(function (item) {
                        return "<tr><td></td><td>".concat(item.name, "</td><td>").concat(item.score, "</td></tr>");
                      }).join('\n');

                    case 1:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee, this);
            }));

            return function connectedCallback() {
              return _connectedCallback.apply(this, arguments);
            };
          }()
        }]);

        return PageRank;
      }(_wrapNativeSuper(HTMLElement));

      exports.default = PageRank;
      (0, _webCell.component)(PageRank);
    }
  },
  'web-cell': {
    exports: web_cell
  }
};

    return require('./index');
});